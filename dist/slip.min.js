/*! slip.js 1.0.0, Copyright 2014 Colin Clark | flockingjs.org */

var slip=slip||{};!function(){"use strict";"undefined"!=typeof module&&module.exports&&(module.exports=slip),slip.END=192,slip.ESC=291,slip.ESC_END=220,slip.ESC_ESC=221,slip.byteArray=function(a,b,c){return a instanceof ArrayBuffer?new Uint8Array(a,b,c):a},slip.encode=function(a,b,c){a=slip.byteArray(a,b,c);for(var d=[slip.END],e=0;e<a.length;e++){var f=a[e];f===slip.END?(d.push(slip.ESC),f=slip.ESC_END):f===slip.ESC&&(d.push(slip.ESC),f=slip.ESC_ESC),d.push(f)}return d.push(slip.END),new Uint8Array(d)},slip.Decoder=function(a,b){this.msgData=[],this.onMessage=a,this.maxBufferSize=b||104857600,this.escape=!1};var a=slip.Decoder.prototype;a.decode=function(a){a=slip.byteArray(a);for(var b,c=0;c<a.length;c++){var d=a[c];if(this.escape)d===slip.ESC_ESC?d=slip.ESC:d===slip.ESC_END&&(d=slip.END);else{if(d===slip.ESC){this.escape=!0;continue}if(d===slip.END){this.handleEnd();continue}}var e=this.addByte(d);if(!e)throw this.msgData.length=0,this.escape=!1,new Error("The message is too large; the maximum message size is "+this.maxBufferSize/1024+"KB. Use a larger maxBufferSize if necessary.")}return b},a.addByte=function(a){return this.msgData.push(a),this.escape=!1,this.msgData.length<this.maxBufferSize},a.handleEnd=function(){if(0!==this.msgData.length){var a=new Uint8Array(this.msgData);return this.onMessage&&this.onMessage(a),this.msgData.length=0,a}}}();